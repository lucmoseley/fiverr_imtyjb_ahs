# populate_appointments.py
# France Cheong
# 11/10/2021


# ###########
# 1. Libraries
# ###########

import sqlite3


# ###########
# 2. Constants
# ###########
DATABASE_URI = "medical_centre.db"


# ###########
# 3. Functions
# ###########

def populate_appointments(cur):

    # List of appointments
    appointments = [

        # Appointment 1
        {
            "appt_id"    : None,  # PK - Generated by SQLite
            "doc_id"     : "1",   # This ID must exist in the doctor table
            "patient_id" : "1",   # This ID must exist in the patient table 
            "appt_date"  : "11/20/2021", 
            "appt_time"  : "10:30 AM", 
            "appt_notes" : "Might be a few minutes late ...", 
        },

        # Appointment 2
        {
            "appt_id"    : None,  # PK - Generated by SQLite
            "doc_id"     : "1",   # This ID must exist in the doctor table
            "patient_id" : "2",   # This ID must exist in the patient table 
            "appt_date"  : "11/20/2021", 
            "appt_time"  : "11:00 AM", 
            "appt_notes" : "Allergic to penicillin ...", 
        },

        # Appointment 3
        {
            "appt_id"    : None,  # PK - Generated by SQLite
            "doc_id"     : "2",   # This ID must exist in the doctor table
            "patient_id" : "3",   # This ID must exist in the patient table 
            "appt_date"  : "12/20/2021", 
            "appt_time"  : "10:30 AM", 
            "appt_notes" : "Scared of doctors ...", 
        },




        # More appointments if any

    ]

    appt_sql = "INSERT INTO appointment VALUES (?, ?, ?, ?, ?, ?);" # 5 values
    for appt in appointments:    
        print(f"\nInserting: {appt}")
        param_tuple = [value for value in appt.values()] # Cant' use a tuple, use a list
        print(f"param_tuple: {param_tuple}")
        cur.execute(appt_sql, param_tuple)

 
# ###########
# 4. Main method
# ###########

if __name__ == '__main__':

    print("\nPopulating apppointments  ....") 

    input("\nPress Enter to continue or Ctrl+C to cancel ...")

    with sqlite3.connect(DATABASE_URI) as conn:
        print(f"Opened a connection to database {DATABASE_URI}")

        # 1. Get a cursor
        cur = conn.cursor()
        print("Got a cursor to the connection")

        # 2. Populate appointments
        populate_appointments(cur)
        print(f"Appointment table populated in database {DATABASE_URI}")

        # 3. Save the records
        conn.commit()

        # No need to close the cursor and connection when using the with statement
        # Will be closed automatically

    print("\nAll done!")    

    print("\nPlease use DB Browser for SQLite to check the database!")                